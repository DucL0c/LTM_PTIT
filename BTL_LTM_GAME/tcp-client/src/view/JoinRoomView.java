/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import run.ClientRun;

/**
 *
 * @author admin
 */
public class JoinRoomView extends javax.swing.JFrame {
    /**
     * Creates new form HomeView
     */
    DefaultTableModel model;
    public JoinRoomView() {
        initComponents();
        model = (DefaultTableModel) tblListRoom.getModel();
        model.setColumnIdentifiers(new Object[]{
            "Stt","Room","Max Players","Available Slots"
        });

    }
    public void showTable(){
        model.addRow(new Object[]{
            "1","1","1","1"
        });
    }

    public void setListRoom(Vector vdata, Vector vheader) {
        System.out.println(vdata+ " " + vheader);
        tblListRoom.setModel(new DefaultTableModel(vdata, vheader));
    }
    
    public void resetTblRoom () {
        DefaultTableModel dtm = (DefaultTableModel) tblListRoom.getModel();
        dtm.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnJoin = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListRoom = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnJoin.setBackground(new java.awt.Color(102, 204, 255));
        btnJoin.setText("Vào Phòng");
        btnJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinActionPerformed(evt);
            }
        });

        btnReturn.setBackground(new java.awt.Color(255, 102, 102));
        btnReturn.setForeground(new java.awt.Color(242, 242, 242));
        btnReturn.setText("Quay Lại");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        tblListRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên Phòng", "Số Lượng Người Chơi", "Số Chỗ Trống"
            }
        ));
        tblListRoom.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblListRoom.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tblListRoom);

        btnNew.setBackground(new java.awt.Color(51, 255, 102));
        btnNew.setText("Tạo Phòng");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnJoin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNew)
                .addGap(109, 109, 109)
                .addComponent(btnReturn)
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnJoin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinActionPerformed
        int selectedRow = tblListRoom.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy giá trị của cột "Available" từ dòng được chọn
            Object availableValue = tblListRoom.getValueAt(selectedRow, 3);  // Cột thứ 3 là cột "Available"

            // Kiểm tra và chuyển đổi giá trị "Available" thành số nguyên
            int available;
            if (availableValue instanceof String) {
                available = Integer.parseInt((String) availableValue);  // Chuyển đổi từ String sang int
            } else if (availableValue instanceof Integer) {
                available = (Integer) availableValue;  // Nếu là Integer, thì ép kiểu trực tiếp
            } else {
                available = 0;  // Phòng không khả dụng nếu giá trị không phải String hoặc Integer
            }

            // Kiểm tra nếu Available > 0 thì cho phép tham gia
            if (available > 0) {
                String roomName = (String) tblListRoom.getValueAt(selectedRow, 1);  // Cột thứ 1 là tên phòng
                // Gửi yêu cầu tham gia phòng đến server
                ClientRun.clientHander.joinRoom(roomName);
                ClientRun.clientHander.setNameRooom(roomName);
            } else {
                // Hiển thị thông báo phòng đã đầy
                JOptionPane.showMessageDialog(null, "Room is full. You cannot join.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a room to join.");
        }
    }//GEN-LAST:event_btnJoinActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.dispose();
        ClientRun.openScene(ClientRun.SceneName.HOMEVIEW);
        ClientRun.homeView.setUsername(ClientRun.clientHander.getLoginUser());
        ClientRun.homeView.setUserScore(ClientRun.clientHander.getScore());
        ClientRun.clientHander.getListOnline();
        ClientRun.closeScene(ClientRun.SceneName.JOINROOMVIEW);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        try {
            // Nhập tên phòng
            String roomName = JOptionPane.showInputDialog("Enter room name:");
            if (roomName == null || roomName.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Room name cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Nhập kích thước phòng và kiểm tra
            String sizeStr = JOptionPane.showInputDialog("Enter room size:");
            if (sizeStr == null || sizeStr.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Room size is required!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int size = Integer.parseInt(sizeStr);

            if (size <= 0) {
                JOptionPane.showMessageDialog(null, "Room size must be greater than 0!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            ClientRun.clientHander.setHost(ClientRun.clientHander.getLoginUser());
            ClientRun.clientHander.setNameRooom(roomName);
            // Gửi yêu cầu tạo phòng đến server
            ClientRun.clientHander.createRoom(roomName, size);
            System.out.println("create_room " + roomName + " " + size);

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid room size! Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNewActionPerformed
   
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJoin;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReturn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblListRoom;
    // End of variables declaration//GEN-END:variables
}
